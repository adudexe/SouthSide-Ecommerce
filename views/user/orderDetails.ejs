<%- include('../partials/user/header') %>
<html lang="en">
    <head>
        <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <style>
            .order-card {
                border: none;
                border-radius: 15px;
                box-shadow: 0 0 20px rgba(0,0,0,0.05);
                transition: transform 0.3s ease;
            }
            .order-card:hover {
                transform: translateY(-5px);
            }
            .status-badge {
                padding: 8px 15px;
                border-radius: 20px;
                font-weight: 500;
            }
            .order-item-card {
                border: 1px solid #eee;
                border-radius: 12px;
                transition: all 0.3s ease;
            }
            .order-item-card:hover {
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }
            .custom-header {
                background: linear-gradient(45deg, #2ecc71, #27ae60);
                color: white;
                border-radius: 15px 15px 0 0;
                padding: 20px;
            }
            .btn-custom {
                border-radius: 25px;
                padding: 8px 20px;
                transition: all 0.3s ease;
            }
            .btn-custom:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }
            .timeline-item {
                position: relative;
                padding-left: 30px;
            }
            .timeline-item::before {
                content: '';
                position: absolute;
                left: 0;
                top: 50%;
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: #2ecc71;
                transform: translateY(-50%);
            }
            .price-tag {
                font-size: 1.2rem;
                font-weight: 600;
                color: #2ecc71;
            }
        </style>
    </head>
<body class="bg-light">
    
    <div class="container py-5">
        <header class="text-center mb-5">
            <h1 class="display-4 fw-bold text-success mb-3">Order Details</h1>
            <div class="timeline-item mb-2">
                <p class="text-muted mb-0">Order placed on <%= (Order[0].createdOn).toLocaleDateString('en-US', {
                    month: 'long',
                    day: 'numeric',
                    year: 'numeric'
                }); %></p>
            </div>
        </header>
        
        <main>
            <!-- Order Summary Card -->
            <div class="order-card card mb-4">
                <div class="custom-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Order Summary</h5>
                    <% if (Order[0].status == "Pending") { %>
                        <span class="status-badge bg-warning text-dark"><%= Order[0].status %></span>    
                    <% } else if(Order[0].status == "Success"){ %>
                        <span class="status-badge bg-success"><%= Order[0].status %></span>    
                    <% } else if(Order[0].status == "Canceled"){ %>
                        <span class="status-badge bg-danger"><%= Order[0].status %></span>    
                    <% } %>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <p class="mb-2"><i class="fas fa-hashtag me-2"></i><strong>Order ID:</strong> 
                                <span class="text-muted"><%= Order[0]._id %></span>
                            </p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <p class="price-tag mb-0">Total: ₹<%= Math.floor(Order[0].totalPrice) %></p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Shipping and Payment Info -->
            <div class="row g-4 mb-4">
                <div class="col-md-6">
                    <div class="order-card card h-100">
                        <div class="custom-header">
                            <h5 class="mb-0"><i class="fas fa-shipping-fast me-2"></i>Shipping Information</h5>
                        </div>
                        <div class="card-body">
                            <h6 class="fw-bold mb-3"><%= (Order[0].addres).name %></h6>
                            <p class="mb-2 text-muted">
                                <%= (Order[0].addres).street %><br>
                                <%= (Order[0].addres).city %>, <%= (Order[0].addres).country %>
                            </p>
                            <p class="mb-0">
                                <i class="fas fa-phone me-2"></i>+91 <%= (Order[0].addres).phone %>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="order-card card h-100">
                        <div class="custom-header">
                            <h5 class="mb-0"><i class="fas fa-credit-card me-2"></i>Payment Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="fw-bold mb-0">Payment Method</h6>
                                <% if (Order[0].paymentMethod == "failed") { %>
                                    <span class="badge bg-light text-dark"><%=Order[0].paymentMethod === "failed" ? "Payment Failed" :
                                        Order[0].paymentMethod === "cod" ? "Cash On Delivery" :
                                        Order[0].paymentMethod === "wallet" ? "Wallet" :
                                        "Online";
                                      %></span>
                                    <a  class="btn btn-secondary btn--sm" onclick="retryPayment('<%=Math.floor(Order[0].totalPrice)%>','<%= Order[0]._id %>')">Retry Payment</a>
                                <% } else {%>
                                    <span class="badge bg-light text-dark"><%=Order[0].paymentMethod === "failed" ? "Payment Failed" :
                                        Order[0].paymentMethod === "cod" ? "Cash On Delivery" :
                                        Order[0].paymentMethod === "wallet" ? "Wallet" :
                                        "Online";
                                      %></span>
                                <% } %>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="fw-bold mb-0">Amount Paid</h6>
                                <span class="price-tag">₹<%= Math.floor(Order[0].totalPrice) %></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Ordered Items -->
            <div class="order-card card mb-4">
                <div class="custom-header">
                    <h5 class="mb-0"><i class="fas fa-shopping-bag me-2"></i>Ordered Items</h5>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        <% Order[0].orderItems.forEach(element => { %>
                            <div class="col-12">
                                <div class="order-item-card p-3">
                                    <div class="row align-items-center">
                                        <div class="col-md-6">
                                            <h6 class="mb-2"><%= element.product.productName %></h6>
                                            <p class="text-muted mb-0">Quantity: <%= element.quantity %></p>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="price-tag mb-2 mb-md-0">₹<%= element.price %></div>
                                        </div>
                                        <div class="col-md-3 text-md-end gap-5">
                                            <%if(Order[0].paymentMethod == "failed"){ %>
                                                <span class="status-badge bg-danger">Payment Failed</span>
                                            <% } else {%>
                                                <% if (element.status === "Delivered") { %>
                                                    <span class="status-badge bg-success" style="margin-right: 20px;"><%= element.status %></span>
                                                    <button class="return-btn btn-custom btn btn-sm" style="background-color: red; border: none;" data-id="<%= element._id %>">Return Product</button>
                                                <% } else if (element.status === "Returned") { %>
                                                    <span class="status-badge bg-danger"><%= element.status %></span>
                                                <% } else if (element.status === "Refunded") { %>
                                                    <span class="status-badge bg-success"><%= element.status %></span>
                                                <% } else {%>
                                                <% if (element.status === "Pending") { %>
                                                    <span class="status-badge bg-warning text-dark"><%= element.status %></span>
                                                <% } else if (element.status === "Shipped") { %>
                                                    <span class="status-badge bg-info"><%= element.status %></span>
                                                <% } else if (element.status === "Cancelled") { %>
                                                    <span class="status-badge bg-danger"><%= element.status %></span>
                                                <% } %>
                                                <div class="mt-2">
                                                    <% if(element.status == "Cancelled") { %>
                                                        <!-- <button class="btn-custom btn btn-outline-danger btn-sm" disabled>Cancel</button> -->
                                                        <% } else if(element.status == "ReturnInit") { %>
                                                            <span class="status-badge bg-info">Retrun Iniitated</span>
                                                        <% } else if(element.status == "CancelInit") { %>
                                                            <span class="status-badge bg-info">Cancel Iniitated</span>
                                                        <% } else { %>
                                                                <button class="cancel-btn btn-custom btn  btn-sm"  style="background-color: red; border: none;" data-id="<%= element._id %>">Cancel</button>
                                                        <% } %>
                                                </div>
                                            <% }  %>
                                        <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
            <!-- <p><%= %></p> -->
            <a href="/user/order/downloadinvoice/<%=Order[0]._id%>"   class="btn btn-md">Download invoice</a>
        </main>
        
        <footer class="text-center mt-5">
            <p class="text-muted">&copy; 2025 SouthSide. All rights reserved.</p>
        </footer>
    </div>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        document.querySelectorAll(".cancel-btn").forEach((button) => {
        button.addEventListener("click", async (e) => {
            const orderId = e.target.getAttribute("data-id");
            
            // Show cancellation reason modal
            const { value: cancelReason, isDismissed } = await Swal.fire({
                title: 'Cancel Order',
                input: 'textarea',
                inputLabel: 'Please tell us why you want to cancel this order',
                inputPlaceholder: 'Enter your reason here...',
                inputAttributes: {
                    'aria-label': 'Cancellation reason',
                    'maxlength': '500'
                },
                showCancelButton: true,
                confirmButtonText: 'Submit',
                cancelButtonText: 'Keep Order',
                inputValidator: (value) => {
                    if (!value) {
                        return 'Please provide a reason for cancellation';
                    }
                    if (value.length < 10) {
                        return 'Please provide a more detailed reason (minimum 10 characters)';
                    }
                }
            });

            // If modal was dismissed or canceled, do nothing
            if (isDismissed) return;

            try {
                // Send cancellation request with reason
                const response = await fetch(`/user/myAccount/order/cancel/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ reason: cancelReason })
                });

                if (!response.ok) {
                    throw new Error(`Failed to cancel the order. Status: ${response.status}`);
                }

                const details = await response.json();
                console.log("Order canceled:", details);

                // Show success message
                await Swal.fire({
                    title: 'Order Cancelation Initiated..',
                    text: 'Request for Canceling the order has been sent',
                    icon: 'success',
                    confirmButtonText: 'OK'
                });

                window.location.reload();
            } catch (err) {
                console.error("Error canceling the order:", err);
                
                // Show error message
                await Swal.fire({
                    title: 'Error!',
                    text: 'There was an error canceling the order. Please try again later.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });
        $(document).ready(function() {
            $('.text-success').hide().fadeIn(1500);
        });


        const returnBtn = document.querySelectorAll(".return-btn");
        if(returnBtn.length)
        {
            returnBtn.forEach(button=> {
            button.addEventListener("click", async (e) => {
                const orderId = e.target.getAttribute("data-id");
                
                // Show cancellation reason modal
                const { value: cancelReason, isDismissed } = await Swal.fire({
                    title: 'Return Product',
                    input: 'textarea',
                    inputLabel: 'Please tell us why you want to return this product',
                    inputPlaceholder: 'Enter your reason here...',
                    inputAttributes: {
                        'aria-label': 'Cancellation reason',
                        'maxlength': '500'
                    },
                    showCancelButton: true,
                    confirmButtonText: 'Submit',
                    cancelButtonText: 'Keep Order',
                    inputValidator: (value) => {
                        if (!value) {
                            return 'Please provide a reason for cancellation';
                        }
                        if (value.length < 10) {
                            return 'Please provide a more detailed reason (minimum 10 characters)';
                        }
                    }
                });

                if (isDismissed) return;

                try {
                // Send cancellation request with reason
                const response = await fetch(`/user/myAccount/order/return/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ reason: cancelReason })
                });

                if (!response.ok) {
                    throw new Error(`Failed to cancel the order. Status: ${response.status}`);
                }

                const details = await response.json();
                console.log("Order canceled:", details);

                // Show success message
                await Swal.fire({
                    title: 'Return Initiated',
                    text:  details.message || 'Return has initiated succesfully',
                    icon: 'success',
                    confirmButtonText: 'OK'
                });

                window.location.reload();
            } catch (err) {
                console.error("Error canceling the order:", err);
                
                // Show error message
                await Swal.fire({
                    title: 'Error!',
                    text: 'There was an error in returning the order. Please try again later.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
                
            })
        })
    }

    async function retryPayment(amount,orderId)
    {
        try
        {
            console.log("Order Id",orderId);
            const response = await fetch('/user/create-order', {
                                    method: 'POST',
                                    headers: {
                                    'Content-Type': 'application/json'
                                    },
                                    // body:JSON.stringify(orderType),
                                    body: JSON.stringify({ amount, currency: 'INR', receipt: 'receipt#1', notes: {} })
                                });

                                console.log("Responce is",response)

                                const order = await response.json();
                                console.log("Order Response",order);
                                // Open Razorpay Checkout
                               if(order.succes)
                               {
                                const options = {
                                    key: order.order.payment_id, // Replace with your Razorpay key_id
                                    amount: amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                                    currency: 'INR',
                                    name:order.order.userName,
                                    contact:order.order.phone,
                                    description: 'Test Transaction',
                                    order_id: order.order.order_id, // This is the order_id created in the backend
                                    callback_url: 'http://localhost:3000/user/order/success',// Your success URL
                                    prefill: {
                                    name:""+order.order.userName+"" ,
                                    email: ""+order.order.email+"",
                                    contact:""+order.order.phone+""
                                    },
                                    theme: {
                                    color: '#F37254'
                                    },
                                    handler: function (response) {
                                        fetch('/user/verify-payment', {
                                            method: 'POST',
                                            headers: {
                                            'Content-Type': 'application/json'
                                            },
                                            body: JSON.stringify({
                                                orderId:orderId,
                                                order:order, 
                                                razorpay_order_id: response.razorpay_order_id,
                                                razorpay_payment_id: response.razorpay_payment_id,
                                                razorpay_signature: response.razorpay_signature
                                            })
                                        }).then(res => res.json())
                                            .then(data => {
                                                console.log("data is",data)
                                            if (data.success) {
                                                    Swal.fire({
                                                        title: "Order Placed..!",
                                                        text: "Paymet Succesfull..",
                                                        icon: "success",
                                                        // showCancelButton: true,
                                                        confirmButtonColor: "#3085d6",
                                                        cancelButtonColor: "#d33",
                                                        confirmButtonText: "Ok"
                                                        }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            window.location.reload()
                                                        }
                                                        });
                                                // alert("Paymet Succesfull..");
                                                
                                            } else {
                                                Swal.fire({
                                                    title: "Failed To Place Order...",
                                                    text: data.message||'Payment verification failed',
                                                    icon: "error"
                                                });
                                                // alert(data.message||'Payment verification failed');
                                            }
                                            }).catch(error => {
                                            console.error('Error:', error);
                                            alert('Error verifying payment');
                                        });
                                    }
                                };
                                // alert("Payment is online");
                                    const rzp = new Razorpay(options);
                                    rzp.on('payment.failed', async (response) => {
                                        // console.log("We are in failed payment");
                                        console.log("Order Id is",order.order.order_id);

                                        // SweetAlert2: Display a custom alert for payment failure
                                        let responce = await fetch("/user/checkout/failed",{
                                            method:"POST",
                                            headers:{
                                                "Content-Type":"application/json"
                                            },
                                            body:JSON.stringify({orderId})
                                        })
                                        console.log("Responce",responce);
                                        let details = await responce.json();
                                        console.log("Details",details)

                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Payment Failed',
                                            text: 'Something went wrong with the payment. Please try again.',
                                            showConfirmButton: true,  // Show the confirm button
                                            confirmButtonText: 'OK'  // Text on the confirm button
                                        })

                                    });

                                    rzp.open()
                                }
        }
        catch(err)
        {
            console.log("Error in Retry Payment",err);
        }
    }
    </script>
</body>
</html>