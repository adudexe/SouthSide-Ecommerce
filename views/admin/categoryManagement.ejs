<%- include("../partials/admin/header.ejs") %>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Category Management </h2>
                    <!-- <p>Brand and vendor management</p> -->
                </div>
                <div>
                <!-- Trigger Button for Modal -->
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                    <i class="text-muted material-icons md-post_add"></i>Add New Category
                </button>

                </div>
            </div>
            
            
            <div class="card mb-4 ">
                <div class="CardBody card-body d-flex flex-row gap-3 flex-wrap" id="category-list">
                   <% if (category.length == 0) { %>
                    <p>No Category Found</p>
                   <% } else { %>
                    <% category.forEach(element => { %>
                        <!-- col.// -->
                            <div class="col-xl-2 col-lg-3 col-md-4 col-6">
                                <figure class="card border-1">
                                    <!-- <p><%= element %></p> -->
                                        <div class="card-header bg-white text-center">
                                            <h6 class="card-title m-0 name"><%= element.name %></h6>
                                        </div>
                                        <% if (element.discount) { %>
                                            <div class="card-header bg-white text-center">
                                                <h6 class="card-title m-0 discount">discount <%= element.discount %>%</h6>
                                            </div>
                                        <% } %>
                                        <figcaption class="card-body text-center ">
                                            <% if (element.isListed) { %>
                                                <a type="button" class="btn btn-danger" href="/admin/category/unlist/<%= element._id %>">Unlist</a>
                                            <% } else { %>
                                                <a type="button" class="btn btn-primary" href="/admin/category/list/<%= element._id %>">List</a>
                                            <!-- <a href="#"> 13 items </a> -->
                                            <% } %>
                                            <a type="button" class="updateBtn btn btn-info" style="background-color: green; color: white;"   data-id="<%= element._id %>">update</a>
                                        </figcaption>
                                </figure>
                            </div>
                            <% }) %>
                    <% } %>
                </div> <!-- row.// -->
            </div> <!-- card-body end// -->
            
           <!-- Add Category Modal -->
            <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="addCategoryForm">
                                <div class="mb-3">
                                    <label for="categoryName" class="form-label">Category Name</label>
                                    <input type="text" class="form-control" id="categoryName" name="categoryName"  placeholder="Enter category name">
                                    <div id="categoryNameError" class="text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="categoryOffer" class="form-label">Discount %</label>
                                    <input type="number" class="form-control" id="categoryOffer" name="categoryOffer"  placeholder="Enter a discount %">
                                    <div id="categoryOfferError" class="text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="categoryDescription" class="form-label">Category Description</label>
                                    <textarea class="form-control" id="categoryDescription" name="categoryDescription" rows="3" placeholder="Enter description (optional)"></textarea>
                                    <div id="categoryDescriptionError" class="text-danger"></div>
                                </div>
                                <button type="submit" class="btn btn-primary">Add Category</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Update Category Modal  -->
            <div class="modal fade" id="updateCategoryModal" tabindex="-1" aria-labelledby="updateCategoryModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="updateCategoryModalLabel">Update Category</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="updateCategoryForm">
                                <div class="mb-3">
                                    <label for="updateCategoryName" class="form-label">Category Name</label>
                                    <input type="text" class="form-control" id="updateCategoryName" name="categoryName" placeholder="Enter category name">
                                    <div id="updateCategoryNameError" class="text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="updateCategoryOffer" class="form-label">Discount %</label>
                                    <input type="number" class="form-control" id="updateCategoryOffer" name="categoryOffer" placeholder="Enter a discount %">
                                    <div id="updateCategoryOfferError" class="text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="updateCategoryDescription" class="form-label">Category Description</label>
                                    <textarea class="form-control" id="updateCategoryDescription" name="categoryDescription" rows="3" ></textarea>
                                    <div id="updateCategoryDescriptionError" class="text-danger"></div>
                                </div>
                                <button type="submit" class="btn btn-primary">Update Category</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            
        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> Â©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
   
    <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="assets/js/vendors/select2.min.js"></script>
    <script src="assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="assets/js/main.js" type="text/javascript"></script>
    <!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // console.log(document.querySelector("#updateBtn"))
        document.querySelectorAll(".updateBtn").forEach((btn) => {
    btn.addEventListener("click", async (e) => {
        try {
            const id = e.target.getAttribute("data-id");
            console.log("Category id", id);

            let response = await fetch(`/admin/category/update/${id}`, {
                method: "GET"
            });

            console.log(response);

            let details = await response.json();
            console.log(details);
            console.log(details.categoryDetails.name);

            // Get the modal element
            var updateCategoryModal = new bootstrap.Modal(document.getElementById('updateCategoryModal'));

            // Pre-fill the form fields with existing category data
            document.querySelector("#updateCategoryName").value = details.categoryDetails.name;
            document.querySelector("#updateCategoryOffer").value = details.categoryDetails.discount || ''; // Default to empty if no discount
            document.querySelector("#updateCategoryDescription").value = details.categoryDetails.description || '';

            // Show the modal
            updateCategoryModal.show();

            // Now listen for the form submission to update the category
            document.querySelector("#updateCategoryForm").addEventListener("submit", async (e) => {
                e.preventDefault();

                const updatedName = document.querySelector("#updateCategoryName").value;
                const updatedOffer = document.querySelector("#updateCategoryOffer").value;
                const updatedDescription = document.querySelector("#updateCategoryDescription").value;

                // Check if any value has changed
                if (
                    updatedName === details.categoryDetails.name &&
                    updatedOffer == details.categoryDetails.discount &&
                    updatedDescription === details.categoryDetails.description
                ) {
                    // No changes made, show error message
                    document.querySelector("#updateCategoryNameError").textContent = "No changes made to the category.";
                    return;
                }

                // Otherwise, send a PUT request to update the category
                try {
                    let updateResponse = await fetch(`/admin/category/update/${id}`, {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            name: updatedName,
                            discount: updatedOffer,
                            description: updatedDescription
                        })
                    });

                    let updateResult = await updateResponse.json();
                    console.log(updateResult);

                    // Optionally, handle the response and show success message

                    if (updateResult.success) {
                        // Close the modal and refresh the page or update the UI as needed
                        // alert("Category updated successfully!");
                        Swal.fire({
                            icon: 'success',
                            title: 'Category updated successfully!',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            // This will execute after the alert closes
                            updateCategoryModal.hide();
                            location.reload();  
                        });

                    } else {
                        Swal.fire({
                        icon: 'error',
                        title: 'An error occurred',
                        text: 'Failed to Update the category'
                    });
                    }
                } catch (err) {
                    console.log("Error updating category:", err);
                    Swal.fire({
                        icon: 'error',
                        title: 'An error occurred',
                        text: 'An error occurred while adding the category.'
                    });
                }
            });
        } catch (err) {
            console.log("Error in fetching category details");
            console.log(err);
        }
    });
});





    document.getElementById('addCategoryForm').addEventListener('submit', async function(event) {
    try {
        // Clear previous error messages
        clearErrors();
        event.preventDefault();

        const categoryOffer = document.getElementById("categoryOffer");
       

        // Get form data
        const categoryName = document.getElementById('categoryName').value.trim();
        const categoryDescription = document.getElementById('categoryDescription').value.trim();

        // Form validation
        let isValid = true;
        if (!categoryName) {
            const categoryNameError = document.getElementById('categoryNameError');
            categoryNameError.textContent = 'Category name is required.';
            isValid = false;
        }

        if(categoryOffer)
        {
            if (isNaN(categoryOffer.value) || Number(categoryOffer.value) > 90)
            {
                const categoryOfferError = document.getElementById("categoryOfferError");  
                categoryOfferError.textContent = "Provide a valid discount"
                isValid = false;
            }
        }

        if (!isValid) {
            event.preventDefault();
            return;
        }
        const catDiscount = categoryOffer.value

        // Prepare form data to send
        const formData = {
            categoryName,
            catDiscount,
            categoryDescription
        };

        // Send the data via Fetch API
        const response = await fetch('/admin/categoryManagement', { 
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });
        const data = await response.json();
        
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Category added successfully!',
                showConfirmButton: false,
                timer: 1500
            });

            $('#addCategoryModal').modal('hide');
            document.getElementById('addCategoryForm').reset();

            // Refresh the category list
            refreshCategoryList();
        } else {
            Swal.fire({
            icon: 'error',
            title: 'Error refreshing categories',
            text:  data.message || 'An error occurred while refreshing the category list.'
        });
        }
    } catch (error) {
        console.log('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error refreshing categories',
            text: 'An error occurred while refreshing the category list.'
        });
    }
});

// Function to clear error messages
function clearErrors() {
    const categoryNameError = document.getElementById('categoryNameError');
    if (categoryNameError) categoryNameError.textContent = '';
}


async function refreshCategoryList() {
    try {
        const response = await fetch('/admin/category/updateList'); // Your server endpoint to fetch the updated category list
        const data = await response.json();

        // console.log(data);

        if (data.success) {
            const categoryListContainer = document.querySelector('.CardBody');
            // categoryListContainer.innerHTML = ''; // Clear the existing list
            const div = document.createElement("div");
            div.classList.add("col-6");
            div.classList.add("col-xl-2");
            div.classList.add("col-lg-3");
            div.classList.add("col-md-4");
            data.categories.forEach(category => {
                div.innerHTML = `
                    <figure class="card border-1">
                        <div class="card-header bg-white text-center">
                            <h6 class="card-title m-0">${category.name}</h6>
                        </div>
                        
                        ${category.isListed ? `
                            <div class="card-header bg-white text-center">
                                <h6 class="card-title m-0 discount">Discount ${element.discount}%</h6>
                            </div>
                        ` : ''}
                        
                        <figcaption class="card-body text-center">
                            ${category.isListed ? 
                                `<a type="button" class="btn btn-danger" href="/admin/category/unlist/${category._id}">Unlist</a>` : 
                                `<a type="button" class="btn btn-primary" href="/admin/category/list/${category._id}">List</a>`
                            }
                            <a type="button" class="updateBtn btn btn-info" style="background-color: green; color: white;" data-id="${category._id}">Update</a>
                        </figcaption>
                    </figure>
                `;

                categoryListContainer.appendChild(div);
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Ops',
                text: 'Error refreshing categories',
                showConfirmButton: false,
                timer: 1500
            });
        }
    } catch (error) {
        console.log('Error refreshing category list:', error);
    }
}

</script>
</body>

</html>